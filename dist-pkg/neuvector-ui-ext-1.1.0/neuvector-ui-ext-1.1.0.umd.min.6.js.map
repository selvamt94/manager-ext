{"version":3,"sources":["webpack://neuvector-ui-ext-1.1.0/./utils/nodes.ts","webpack://neuvector-ui-ext-1.1.0/./plugins/nodes-class.js","webpack://neuvector-ui-ext-1.1.0/./components/Nodes/grids/NodeVulnerabilitiesGrid.vue","webpack://neuvector-ui-ext-1.1.0/components/Nodes/grids/NodeVulnerabilitiesGrid.vue","webpack://neuvector-ui-ext-1.1.0/./components/Nodes/grids/NodeVulnerabilitiesGrid.vue?f0c5","webpack://neuvector-ui-ext-1.1.0/./components/Nodes/grids/NodeVulnerabilitiesGrid.vue?c27f"],"names":["async","cacheNodesInfo","store","getters","length","cacheNvNamespace","nodeRes","getHosts","dispatch","preprocessNeuVectorHostsData","data","hosts","hostKV","Map","forEach","host","Object","values","interfaces","_interface","interfaceDetail","set","ip","name","axios","url","getSSOUrl","PATH","NODES_URL","method","getHostVulnerabilities","id","SCAN_HOST_URL","params","render","_vm","this","_c","_self","vulnerabilities","attrs","rancherHostName","staticClass","t","staticRenderFns","components","Banner","VulnerabilitiesGrid","props","isLightTheme","Boolean","console","log","hostId","nvId","nvHosts","$store","pathSections","location","pathname","split","has","get","scannedNodeMap","vulRes","report","nodeID","scannedResult","error","component"],"mappings":"2MAAA,8DAIOA,eAAeC,EAAeC,GACnC,GAAgD,IAA5CA,EAAMC,QAAQ,mBAAmBC,OAAc,OAC3CC,eAAiBH,GACvB,IAAII,QAAgBC,iBACpBL,EAAMM,SAAS,wBAAyBC,EAA6BH,EAAQI,KAAKC,SAItF,SAASF,EAA6BE,GACpC,IAAIC,EAAS,IAAIC,IASjB,OARAF,EAAMG,QAAQC,IACZC,OAAOC,OAAOF,EAAKG,YAAYJ,QAASK,IACtCA,EAAWL,QAASM,IAChBR,EAAOS,IAAID,EAAgBE,GAAIP,OAGrCH,EAAOS,IAAIN,EAAKQ,KAAMR,KAEjBH,I,kCCtBT,4GAIOZ,eAAeO,IAClB,OAAOiB,eAAM,CACTC,IAAKC,eAAUC,OAAKC,WACpBC,OAAQ,QAIT7B,eAAe8B,EAAuBC,GACzC,OAAOP,eAAM,CACTC,IAAKC,eAAUC,OAAKK,eACpBH,OAAQ,MACRI,OAAQ,CACJF,GAAIA,O,yCChBhB,IAAIG,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAAEF,EAAII,iBAAmBJ,EAAII,gBAAgBnC,OAAS,EAAGiC,EAAG,sBAAsB,CAACG,MAAM,CAAC,gBAAkBL,EAAII,gBAAgB,YAAcJ,EAAIM,mBAAmBJ,EAAG,MAAM,CAACA,EAAG,SAAS,CAACK,YAAY,yBAAyBF,MAAM,CAAC,MAAQ,UAAU,MAAQL,EAAIQ,EAAE,uBAAuB,IAAI,IAE3WC,EAAkB,G,gDCItB,GACAC,WAAA,CACAC,cACAC,4BAEAC,MAAA,CACAjC,KAAAC,OACAiC,aAAAC,SAEA,cACA,IACAC,QAAAC,IAAA,mCAAArC,MACA,IAAAsC,EAAA,GACA,QAAAtC,KACAsC,EAAA,KAAAtC,KAAAuC,KACA,KAAAb,gBAAA,KAAA1B,KAAAgB,OACA,CACA,IAAAwB,EAAA,KAAAC,OAAArD,QAAA,mBACAoD,GAAA,IAAAA,EAAAnD,eACAH,eAAA,KAAAuD,QACAD,EAAA,KAAAC,OAAArD,QAAA,oBAEA,IAAAsD,EAAAC,SAAAC,SAAAC,MAAA,KACAnB,EAAAgB,IAAArD,OAAA,GACAmD,EAAAM,IAAApB,KACAY,EAAAE,EAAAO,IAAArB,GAAAV,IAEA,KAAAU,kBAEA,MAAAsB,EAAA,KAAAP,OAAArD,QAAA,4BACA,GAAA4D,EAAAF,IAAAR,GACA,KAAAd,gBAAAwB,EAAAD,IAAAT,OACA,CACA,IAAAW,QAAAlC,eAAAuB,GACA,KAAAd,gBAAAyB,EAAAtD,KAAAuD,OAAA1B,gBACA,KAAAiB,OAAAhD,SAAA,kCAAA0D,OAAAb,EAAAc,cAAA,KAAA5B,mBAEA,MAAA6B,GACAjB,QAAAiB,WAGA1D,OACA,OACA6B,gBAAA,KACAE,gBAAA,MClD2a,I,YCOva4B,EAAY,eACd,EACAnC,EACAU,GACA,EACA,KACA,KACA,MAIa,aAAAyB,E","file":"neuvector-ui-ext-1.1.0.umd.min.6.js","sourcesContent":["import { getHosts } from '../plugins/nodes-class';\nimport { Store } from 'vuex';\nimport { cacheNvNamespace } from '../utils/common';\n\nexport async function cacheNodesInfo(store: Store<any>) {\n  if (store.getters['neuvector/hosts'].length === 0) {\n    await cacheNvNamespace(store);\n    let nodeRes = await getHosts();\n    store.dispatch('neuvector/updateHosts', preprocessNeuVectorHostsData(nodeRes.data.hosts));\n  }\n}\n\nfunction preprocessNeuVectorHostsData(hosts: any[]) {\n  let hostKV = new Map();\n  hosts.forEach(host => {\n    Object.values(host.interfaces).forEach((_interface: any) => {\n      _interface.forEach((interfaceDetail: any) => {\n          hostKV.set(interfaceDetail.ip, host);\n      });\n    });\n    hostKV.set(host.name, host);\n  });\n  return hostKV;\n}","import axios from '../interceptor/http-interceptor';\nimport { getSSOUrl } from '../utils/common';\nimport { PATH } from '../types/path';\n\nexport async function getHosts() {\n    return axios({\n        url: getSSOUrl(PATH.NODES_URL),\n        method: 'get',\n    });\n};\n\nexport async function getHostVulnerabilities(id) {\n    return axios({\n        url: getSSOUrl(PATH.SCAN_HOST_URL),\n        method: 'get',\n        params: {\n            id: id\n        }\n    });\n};\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(_vm.vulnerabilities && _vm.vulnerabilities.length > 0)?_c('VulnerabilitiesGrid',{attrs:{\"vulnerabilities\":_vm.vulnerabilities,\"csvFileName\":_vm.rancherHostName}}):_c('div',[_c('Banner',{staticClass:\"type-banner mb-20 mt-0\",attrs:{\"color\":\"warning\",\"label\":_vm.t('general.NO_ROWS')}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\n    import { getHostVulnerabilities } from '../../../plugins/nodes-class';\n    import { cacheNodesInfo } from '../../../utils/nodes';\n    import { Banner } from '@components/Banner';\n    import VulnerabilitiesGrid from '../../common/grids/VulnerabilitiesGrid';\n\n    export default {\n        components: {\n            Banner,\n            VulnerabilitiesGrid,\n        },\n        props: {\n            host: Object,\n            isLightTheme: Boolean,\n        },\n        async fetch(){\n            try {\n                console.log('Get host vulnerabilities...', this.host)\n                let hostId = '';\n                if (this.host) {\n                    hostId = this.host.nvId\n                    this.rancherHostName = this.host.id;\n                } else {\n                    let nvHosts = this.$store.getters['neuvector/hosts'];\n                    if (!nvHosts || nvHosts.length === 0) {\n                        await cacheNodesInfo(this.$store);\n                        nvHosts = this.$store.getters['neuvector/hosts'];\n                    }\n                    let pathSections = location.pathname.split('/');\n                    let rancherHostName = pathSections[pathSections.length - 1];\n                    if (nvHosts.has(rancherHostName)) {\n                        hostId = nvHosts.get(rancherHostName).id;\n                    }\n                    this.rancherHostName = rancherHostName\n                }\n                const scannedNodeMap = this.$store.getters['neuvector/scannedNodeMap'];\n                if (scannedNodeMap.has(hostId)) {\n                    this.vulnerabilities = scannedNodeMap.get(hostId);\n                } else {\n                    let vulRes = await getHostVulnerabilities(hostId);\n                    this.vulnerabilities = vulRes.data.report.vulnerabilities;\n                    this.$store.dispatch('neuvector/updateScannedNodeMap', { nodeID: hostId, scannedResult: this.vulnerabilities });\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        data() {\n          return {\n            vulnerabilities: null,\n            rancherHostName: '',\n          };\n        },\n    };\n</script>\n\n<template>\n    <div>\n        <VulnerabilitiesGrid v-if=\"vulnerabilities && vulnerabilities.length > 0\" :vulnerabilities=\"vulnerabilities\" :csvFileName=\"rancherHostName\"></VulnerabilitiesGrid>\n        <div v-else>\n          <Banner\n            class=\"type-banner mb-20 mt-0\"\n            color=\"warning\"\n            :label=\"t('general.NO_ROWS')\"\n          />\n        </div>\n    </div> \n</template>\n\n\n<style lang=\"scss\">\n   \n</style>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./NodeVulnerabilitiesGrid.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./NodeVulnerabilitiesGrid.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./NodeVulnerabilitiesGrid.vue?vue&type=template&id=7bd85798\"\nimport script from \"./NodeVulnerabilitiesGrid.vue?vue&type=script&lang=js\"\nexport * from \"./NodeVulnerabilitiesGrid.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}