{"version":3,"sources":["webpack://neuvector-ui-ext-1.1.0/./utils/workloads.ts","webpack://neuvector-ui-ext-1.1.0/./plugins/workloads-class.js","webpack://neuvector-ui-ext-1.1.0/./components/Workloads/grids/WorkloadVulnerabilitiesGrid.vue","webpack://neuvector-ui-ext-1.1.0/components/Workloads/grids/WorkloadVulnerabilitiesGrid.vue","webpack://neuvector-ui-ext-1.1.0/./components/Workloads/grids/WorkloadVulnerabilitiesGrid.vue?3365","webpack://neuvector-ui-ext-1.1.0/./components/Workloads/grids/WorkloadVulnerabilitiesGrid.vue?490e"],"names":["async","cacheWorkloadsInfo","store","cacheNvNamespace","workloadRes","getWorkloads","dispatch","preprocessNeuVectorWorkloadsData","data","workloads","workloadKV","Map","cacheRancherWorkloadMap","rancherWorkloads","rancherWorkloadMap","forEach","workload","_workload$status$cont","rancherContainerID","status","containerStatuses","containerID","nvContainerID","split","has","set","id","console","log","axios","url","getSSOUrl","PATH","SCANNED_CONTAINER_URL","method","getWorkloadVulnerabilities","SCAN_URL","params","render","_vm","this","_c","_self","vulnerabilities","length","attrs","rancherWorkloadName","staticClass","t","staticRenderFns","components","Banner","VulnerabilitiesGrid","props","Object","isLightTheme","Boolean","nvContainerId","$store","getters","pathSections","location","pathname","size","rancherClassifiedworkloads","get","scannedWorkloadMap","scannedWorkloadsRes","report","workloadID","scannedResult","error","component"],"mappings":"6MAAA,gGAIOA,eAAeC,EAAmBC,SAC/BC,eAAiBD,GACvB,IAAIE,QAAoBC,iBACxBH,EAAMI,SAAS,4BAA6BC,EAAiCH,EAAYI,KAAKC,YAGlG,SAASF,EAAiCE,GACxC,IAAIC,EAAa,IAAIC,IAErB,OAAOD,EAGFV,eAAeY,EAAwBC,EAAyBX,SAC/DC,eAAiBD,GACvB,IAAIY,EAAqB,IAAIH,IAC7BE,EAAiBE,QAAQC,IAAW,IAAAC,EAClC,IAAIC,EAAqBF,EAASG,OAAOC,oBAAwD,QAApCH,EAAAD,EAASG,OAAOC,kBAAkB,UAAE,IAAAH,OAAA,EAApCA,EAAsCI,cAAoB,GACnHC,EAAgBJ,EAAmBK,MAAM,MAAM,IAAM,GACpDT,EAAmBU,IAAIF,IAC1BR,EAAmBW,IAAIT,EAASU,GAAIJ,KAGxCK,QAAQC,IAAI,qBAAsBd,GAClCZ,EAAMI,SAAS,qCAAsCQ,K,kCC3BvD,4GAIOd,eAAeK,IAClB,OAAOwB,eAAM,CACTC,IAAKC,eAAUC,OAAKC,uBACpBC,OAAQ,QAITlC,eAAemC,EAA2BT,GAC7C,OAAOG,eAAM,CACTC,IAAKC,eAAUC,OAAKI,UACpBF,OAAQ,MACRG,OAAQ,CACJX,GAAIA,O,2CChBhB,IAAIY,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAAEF,EAAII,iBAAmBJ,EAAII,gBAAgBC,OAAS,EAAGH,EAAG,sBAAsB,CAACI,MAAM,CAAC,gBAAkBN,EAAII,gBAAgB,YAAcJ,EAAIO,uBAAuBL,EAAG,MAAM,CAACA,EAAG,SAAS,CAACM,YAAY,yBAAyBF,MAAM,CAAC,MAAQ,UAAU,MAAQN,EAAIS,EAAE,uBAAuB,IAAI,IAE/WC,EAAkB,G,gDCItB,GACAC,WAAA,CACAC,cACAC,4BAEAC,MAAA,CACArC,SAAAsC,OACAC,aAAAC,SAEA,cACA,IACA7B,QAAAC,IAAA,mCACA,IAAA6B,EAAA,GACA,QAAAzC,cAEA,CAEA,IAAAF,EAAA,KAAA4C,OAAAC,QAAA,gCACAC,EAAAC,SAAAC,SAAAvC,MAAA,KACA,IAAAT,GAAA,IAAAA,EAAAiD,KAAA,CACA,IAAAC,EAAA,KAAAN,OAAAC,QAAA,eAAAC,IAAAhB,OAAA,UACAhC,eAAAoD,EAAA,KAAAN,QACA5C,EAAA,KAAA4C,OAAAC,QAAA,gCAEA,IAAAb,EAAA,GAAAc,IAAAhB,OAAA,MAAAgB,IAAAhB,OAAA,KACAjB,QAAAC,IAAAd,EAAAgC,GACAhC,EAAAU,IAAAsB,KACAnB,QAAAC,IAAAkB,GACAW,EAAA3C,EAAAmD,IAAAnB,IAEA,KAAAA,sBAEA,MAAAoB,EAAA,KAAAR,OAAAC,QAAA,gCACA,GAAAO,EAAA1C,IAAAiC,GACA,KAAAd,gBAAAuB,EAAAD,IAAAR,OACA,CACA,IAAAU,QAAAhC,eAAAsB,GACA,KAAAd,gBAAAwB,EAAA3D,KAAA4D,OAAAzB,gBACA,KAAAe,OAAApD,SAAA,sCAAA+D,WAAAZ,EAAAa,cAAA,KAAA3B,mBAEA,MAAA4B,GACA5C,QAAA4C,WAGA/D,OACA,OACAmC,gBAAA,KACAG,oBAAA,MCrD+a,I,YCO3a0B,EAAY,eACd,EACAlC,EACAW,GACA,EACA,KACA,KACA,MAIa,aAAAuB,E","file":"neuvector-ui-ext-1.1.0.umd.min.7.js","sourcesContent":["import { getWorkloads } from '../plugins/workloads-class';\nimport { Store } from 'vuex';\nimport { cacheNvNamespace } from '../utils/common';\n\nexport async function cacheWorkloadsInfo(store: Store<any>) {\n    await cacheNvNamespace(store);\n    let workloadRes = await getWorkloads();\n    store.dispatch('neuvector/updateWorkloads', preprocessNeuVectorWorkloadsData(workloadRes.data.workloads));\n}\n\nfunction preprocessNeuVectorWorkloadsData(workloads: any[]) {\n  let workloadKV = new Map();\n  \n  return workloadKV;\n}\n\nexport async function cacheRancherWorkloadMap(rancherWorkloads: any[], store: Store<any>) {\n  await cacheNvNamespace(store);\n  let rancherWorkloadMap = new Map<string, Object>();\n  rancherWorkloads.forEach(workload => {\n    let rancherContainerID = workload.status.containerStatuses ? workload.status.containerStatuses[0]?.containerID || '' : '';\n    let nvContainerID = rancherContainerID.split('//')[1] || '';\n    if (!rancherWorkloadMap.has(nvContainerID)) {\n      rancherWorkloadMap.set(workload.id, nvContainerID);\n    }\n  });\n  console.log('rancherWorkloadMap', rancherWorkloadMap);\n  store.dispatch('neuvector/updateRancherWorkloadMap', rancherWorkloadMap);\n}","import axios from '../interceptor/http-interceptor';\nimport { getSSOUrl } from '../utils/common';\nimport { PATH } from '../types/path';\n\nexport async function getWorkloads() {\n    return axios({\n        url: getSSOUrl(PATH.SCANNED_CONTAINER_URL),\n        method: 'get',\n    });\n};\n\nexport async function getWorkloadVulnerabilities(id) {\n    return axios({\n        url: getSSOUrl(PATH.SCAN_URL),\n        method: 'get',\n        params: {\n            id: id\n        }\n    });\n};\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(_vm.vulnerabilities && _vm.vulnerabilities.length > 0)?_c('VulnerabilitiesGrid',{attrs:{\"vulnerabilities\":_vm.vulnerabilities,\"csvFileName\":_vm.rancherWorkloadName}}):_c('div',[_c('Banner',{staticClass:\"type-banner mb-20 mt-0\",attrs:{\"color\":\"warning\",\"label\":_vm.t('general.NO_ROWS')}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\n    import { cacheRancherWorkloadMap } from '../../../utils/workloads';\n    import { Banner } from '@components/Banner';\n    import VulnerabilitiesGrid from '../../common/grids/VulnerabilitiesGrid';\n    import { getWorkloadVulnerabilities } from '../../../plugins/workloads-class';\n\n    export default {\n        components: {\n            Banner,\n            VulnerabilitiesGrid,\n        },\n        props: {\n            workload: Object,\n            isLightTheme: Boolean,\n        },\n        async fetch(){\n            try {\n                console.log('Get workload vulnerabilities...')\n                let nvContainerId = '';\n                if (this.workload) {\n                    //Workload info from props\n                } else {\n                    //Workload info from URL\n                    let rancherWorkloadMap = this.$store.getters['neuvector/rancherWorkloadMap'];\n                    let pathSections = location.pathname.split('/');\n                    if (!rancherWorkloadMap || rancherWorkloadMap.size === 0) {\n                        let rancherClassifiedworkloads = this.$store.getters['cluster/all'](pathSections[pathSections.length - 3]);\n                        await cacheRancherWorkloadMap(rancherClassifiedworkloads, this.$store);\n                        rancherWorkloadMap = this.$store.getters['neuvector/rancherWorkloadMap'];\n                    }\n                    let rancherWorkloadName = `${pathSections[pathSections.length - 2]}/${pathSections[pathSections.length - 1]}`;\n                    console.log(rancherWorkloadMap, rancherWorkloadName);\n                    if (rancherWorkloadMap.has(rancherWorkloadName)) {\n                        console.log(rancherWorkloadName);\n                        nvContainerId = rancherWorkloadMap.get(rancherWorkloadName);\n                    }\n                    this.rancherWorkloadName = rancherWorkloadName\n                }\n                const scannedWorkloadMap = this.$store.getters['neuvector/scannedWorkloadMap'];\n                if (scannedWorkloadMap.has(nvContainerId)) {\n                    this.vulnerabilities = scannedWorkloadMap.get(nvContainerId);\n                } else {\n                    let scannedWorkloadsRes = await getWorkloadVulnerabilities(nvContainerId);\n                    this.vulnerabilities = scannedWorkloadsRes.data.report.vulnerabilities;\n                    this.$store.dispatch('neuvector/updateScannedWorkloadMap', {workloadID: nvContainerId, scannedResult: this.vulnerabilities});\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        },\n        data() {\n          return {\n            vulnerabilities: null,\n            rancherWorkloadName: '',\n          };\n        },\n    };\n</script>\n\n<template>\n    <div>\n        <VulnerabilitiesGrid v-if=\"vulnerabilities && vulnerabilities.length > 0\" :vulnerabilities=\"vulnerabilities\" :csvFileName=\"rancherWorkloadName\"></VulnerabilitiesGrid>\n        <div v-else>\n          <Banner\n            class=\"type-banner mb-20 mt-0\"\n            color=\"warning\"\n            :label=\"t('general.NO_ROWS')\"\n          />\n        </div>\n    </div> \n</template>\n\n\n<style lang=\"scss\">\n   \n</style>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./WorkloadVulnerabilitiesGrid.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./WorkloadVulnerabilitiesGrid.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./WorkloadVulnerabilitiesGrid.vue?vue&type=template&id=2e05a5da\"\nimport script from \"./WorkloadVulnerabilitiesGrid.vue?vue&type=script&lang=js\"\nexport * from \"./WorkloadVulnerabilitiesGrid.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}